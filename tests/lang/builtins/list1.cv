// Copyright (c) 2011 King's College London, created by Laurence Tratt
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to
// deal in the Software without restriction, including without limitation the
// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
// sell copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
// IN THE SOFTWARE.


import Builtins, Sys



func test_add():
    assert [] + [] == []
    assert [[]] + [] == [[]]
    assert [] + [[]] == [[]]
    assert [1] + [2] == [1, 2]


func test_equality():
    assert [] == []
    assert [[]] == [[]]
    assert [1,2,3] == [1,2,3]
    assert [1,2,3] != [1,2]
    assert [1,2,3] != [1,2,3,4]
    assert not [1,2,3] == [1,2]
    assert not [1,2,3] == [1,2,3,4]


func test_flattening():
    assert [].flattened() == []
    assert [[]].flattened() == []
    assert [[[]]].flattened() == []
    assert [1, 2, [3, [4, 5]], 6].flattened() == [1, 2, 3, 4, 5, 6]


func test_mult():
    assert [] * 0 == []
    assert [1] * 0 == []
    assert [1] * 1 == [1]
    assert [1] * 2 == [1, 1]
    assert [1, 2] * 2 == [1, 2, 1, 2]


func test_removal():
    x := [1,2,3,2]
    x.remove(2)
    assert x == [1,3,2]
    x := [1,2,3,2]
    for x.remove(2)
    assert x == [1,3]


func test_slicing():
    assert [1,2,3][1:2] == [2]
    x := [1,2,3,4]
    x[1:3] := [5,6]
    assert x == [1,5,6,4]
    x := [1,2,3,4]
    x[1:3] := [5]
    assert x == [1,5,4]
    x := [1,2,3,4]
    x[1:3] := []
    assert x == [1,4]


func main():

    test_add()
    test_equality()
    test_flattening()
    test_mult()
    test_removal()
    test_slicing()
