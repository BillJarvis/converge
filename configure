#! /bin/sh

# If shipping a production release, these two variables should be changed
# to e.g.:
#
#   converge_version=0.7
#   converge_date=2006/01/04

converge_version=current
converge_date=`date '+%Y/%m/%d %H:%M:%S'`

prefix=""
rpython_opt="jit"
while [ $# -ge 1 ]; do
    case $1 in
        --prefix=* ) prefix=`echo $1 | sed "s/--prefix=//g"`; shift;;
        --opt=*    ) rpython_opt=`echo $1 | sed "s/--opt=//g"`; shift;;
        *          ) echo "Unknown switch $1"; exit 1;;
    esac
done

if [ "X$prefix" = "X" ]; then
    prefix="/usr/local/"
fi

echo -n "Checking for Python interpreter... "

which pypy 2> /dev/null > /dev/null
if [ $? -eq 0 ]; then
    PYTHON=`which pypy`
elif [ $? -ne 0 ]; then
    which python 2> /dev/null > /dev/null
    if [ $? -eq 0 ]; then
        PYTHON=`which python`
    else
        echo "not found."
        exit 1
    fi
fi
echo $PYTHON

echo -n "Checking for RPython translate.py... "
if [ "X$PYPY_SRC" != "X" ]; then
    TRANSLATE_PY=$PYPY_SRC/pypy/translator/goal/translate.py
    if [ ! -f $TRANSLATE_PY ]; then
        TRANSLATE_PY=""
    fi
fi

if [ "X$TRANSLATE_PY" = "X" ]; then
    echo "not found (try setting \$PYPY_SRC)."
    exit 1
fi
echo $TRANSLATE_PY

operating_system=`uname -s`
machine_type=`uname -m`
if [ "$operating_system" = "Darwin" -a "$machine_type" = "i386" ]; then
	# On modern Darwin machine it now seems that it's easier to build 64 bit
    # binaries than 32 bit. Why? I don't know.
	machine_type=x86_64
fi
case $operating_system in
    CYGWIN_NT* | MINGW* )
        EXEC_EXT=".exe"
        DIR_SEP="\\";;
    * )
        DIR_SEP="/";;
esac

case $machine_type in
	i386 | i686 )
        bootstrap_dir="bootstrap/32bit_little_endian";;
	amd64 | x86_64 )
        bootstrap_dir="bootstrap/64bit_little_endian";;
	*) echo Unknown machine type "$machine_type"; exit 1;;
esac

#
# Find libpcre.a
#

echo -n "Checking for pcre-config... "
which pcre-config > /dev/null 2> /dev/null
if [ $? -ne 0 ]; then
    echo "not found."
    exit 1
fi
which pcre-config

echo -n "Checking for libpcre.a... "
libpcre_a=""
for dir in `pcre-config --libs | tr " " "\n" | grep "^-L" | sort -u | sed "s/^-L//"`; do
	cnd=$dir/libpcre.a
	if [ -f $cnd ]; then
		libpcre_a=$cnd
		break
	fi
done
if [ "X$libpcre_a" = "X" ]; then
	echo "not found."
    exit 1
fi
echo $libpcre_a
libpcre_include_dirs=`pcre-config --cflags | tr " " "\n"  | grep "^-I" | sed "s/-I//g" | tr "\n" " " | sed "s/ *$//g"`
libpcre_library_dirs=`pcre-config --libs | tr " " "\n"  | grep "^-L" | sed "s/-L//g" | tr "\n" " " | sed "s/ *$//g"`
libpcre_link_flags=`pcre-config --libs`

#
# Find libxml2.a
#

echo -n "Checking for xml2-config... "
which xml2-config > /dev/null 2> /dev/null
if [ $? -ne 0 ]; then
    echo "not found."
    exit 1
fi
which xml2-config

echo -n "Checking for libxml2.a... "
libxml2_a=""
for dir in `xml2-config --libs | tr " " "\n" | grep "^-L" | sort -u | sed "s/^-L//"` ; do
	cnd=$dir/libxml2.a
	if [ -f $cnd ]; then
		libxml2_a=$cnd
		break
	fi
done
if [ "X$libpcre_a" = "X" ]; then
	echo "not found."
    exit 1
fi
echo $libxml2_a
libxml2_include_dirs=`xml2-config --cflags | tr " " "\n"  | grep "^-I" | sed "s/-I//g" | tr "\n" " " | sed "s/ *$//g"`
libxml2_library_dirs=`xml2-config --libs | tr " " "\n"  | grep "^-L" | sed "s/-L//g" | tr "\n" " " | sed "s/ *$//g"`
libxml2_link_flags=`xml2-config --libs`


#
# Bootstrap compiler
#

echo -n "Copying bootstrap compiler... "

cp -p $bootstrap_dir/convergec.bootstrap compiler/convergec
cp -p $bootstrap_dir/convergel.bootstrap compiler/convergel

echo "done."

echo -n "Writing .in files... "

rewriter=`mktemp XXXXXXXXXX`
cat << EOF > $rewriter
import sys
fin=file(sys.argv[1], "r")
d=fin.read(-1)
fin.close()
i = 3
while i < len(sys.argv):
    d=d.replace(sys.argv[i], sys.argv[i + 1])
    i += 2
fout=file(sys.argv[2], "w")
fout.write(d)
fout.close()
EOF
abs_top_srcdir=`pwd`
for p_in in `find . -name "*.in"`; do
    p=`echo $p_in | sed "s/.in$//g"`
    $PYTHON $rewriter $p_in $p "@abs_top_srcdir@" "$abs_top_srcdir" "@PYTHON@" "$PYTHON" "@TRANSLATE_PY@" "$TRANSLATE_PY" "@RPYTHON_OPT@" "$rpython_opt" "@prefix@" "$prefix" "@bindir@" "$prefix/bin" "@libdir@" "$prefix/share" "@libdir@" "$prefix/lib" "@INSTALL@" "$abs_top_srcdir/install.sh" "@CONVERGE_VERSION@" "$converge_version" "@CONVERGE_DATE@"  "$converge_date" "@PLATFORM@" "$operating_system" "@EXEC_EXT" "$exec_ext" "@DIR_SEP@" "$DIR_SEP" "@LIBPCRE_INCLUDE_DIRS@" "$libpcre_include_dirs" "@LIBPCRE_LINK_DIRS@" "$libpcre_library_dirs" "@LIBPCRE_A@" "$libpcre_a" "@LIBPCRE_LINK_FLAGS@" "$libpcre_link_flags" "@LIBXML2_A@" "$libxml2_a" "@LIBXML2_INCLUDE_DIRS@" "$libxml2_include_dirs" "@LIBXML2_LINK_DIRS@" "$libxml2_library_dirs" "@LIBXML2_LINK_FLAGS@" "$libxml2_link_flags"
done
rm -f $rewriter

echo "done."